- name: create osm_net
  os_network:
    auth: "{{ os_migrate_src_auth }}"
    name: osm_net
    # Apparently description is an unsupported param in Ansible even
    # though OpenStack supports it.
    # description: osm_net test network
    state: present
    validate_certs: "{{ os_migrate_src_validate_certs|default(omit) }}"
    ca_cert: "{{ os_migrate_src_ca_cert|default(omit) }}"
    client_cert: "{{ os_migrate_src_client_cert|default(omit) }}"
    client_key: "{{ os_migrate_src_client_key|default(omit) }}"
  tags: always

- name: Create subnet
  os_subnet:
    auth: "{{ os_migrate_src_auth }}"
    state: present
    network_name: osm_net
    name: osm_subnet
    cidr: 192.168.20.0/24
    dns_nameservers:
      - 8.8.8.7
    host_routes:
      - destination: 0.0.0.0/0
        nexthop: 12.34.56.78
      - destination: 192.168.20.0/24
        nexthop: 192.168.20.1
    validate_certs: "{{ os_migrate_src_validate_certs|default(omit) }}"
    ca_cert: "{{ os_migrate_src_ca_cert|default(omit) }}"
    client_cert: "{{ os_migrate_src_client_cert|default(omit) }}"
    client_key: "{{ os_migrate_src_client_key|default(omit) }}"
  tags: always

- name: Create a 2nd subnet for router testing
  os_subnet:
    auth: "{{ os_migrate_src_auth }}"
    state: present
    network_name: osm_net
    name: osm_router_subnet
    cidr: 192.168.10.0/24
    validate_certs: "{{ os_migrate_src_validate_certs|default(omit) }}"
    ca_cert: "{{ os_migrate_src_ca_cert|default(omit) }}"
    client_cert: "{{ os_migrate_src_client_cert|default(omit) }}"
    client_key: "{{ os_migrate_src_client_key|default(omit) }}"
  tags: always

- name: Create security group
  os_security_group:
    auth: "{{ os_migrate_src_auth }}"
    state: present
    name: osm_security_group
    description: OSM security group
    validate_certs: "{{ os_migrate_src_validate_certs|default(omit) }}"
    ca_cert: "{{ os_migrate_src_ca_cert|default(omit) }}"
    client_cert: "{{ os_migrate_src_client_cert|default(omit) }}"
    client_key: "{{ os_migrate_src_client_key|default(omit) }}"
  tags: always

- name: Create security group rule
  os_security_group_rule:
    auth: "{{ os_migrate_src_auth }}"
    security_group: osm_security_group
    protocol: tcp
    port_range_min: 80
    port_range_max: 80
    remote_ip_prefix: 0.0.0.0/0
    validate_certs: "{{ os_migrate_src_validate_certs|default(omit) }}"
    ca_cert: "{{ os_migrate_src_ca_cert|default(omit) }}"
    client_cert: "{{ os_migrate_src_client_cert|default(omit) }}"
    client_key: "{{ os_migrate_src_client_key|default(omit) }}"
  tags: always

- name: create osm_router
  os_router:
    auth: "{{ os_migrate_src_auth }}"
    name: osm_router
    state: present
    network: "{{ test_router_external_network|default('external_network') }}"
    interfaces:
      - net: osm_net
        subnet: osm_subnet
        portip: 192.168.20.10
      - net: osm_net
        subnet: osm_router_subnet
        portip: 192.168.10.10
    validate_certs: "{{ os_migrate_src_validate_certs|default(omit) }}"
    ca_cert: "{{ os_migrate_src_ca_cert|default(omit) }}"
    client_cert: "{{ os_migrate_src_client_cert|default(omit) }}"
    client_key: "{{ os_migrate_src_client_key|default(omit) }}"
  tags: always

- name: create osm_server
  os_server:
    auth: "{{ os_migrate_src_auth }}"
    name: osm_server
    state: present
    # TODO: We don't have flavors or images
    flavor: m1.small
    image: cirros-0.4.0-x86_64-disk.img
    network: osm_net
    security_groups: default
    auto_ip: yes
    # Wait until the floating IP is assigned
    # wait: no
    validate_certs: "{{ os_migrate_src_validate_certs|default(omit) }}"
    ca_cert: "{{ os_migrate_src_ca_cert|default(omit) }}"
    client_cert: "{{ os_migrate_src_client_cert|default(omit) }}"
    client_key: "{{ os_migrate_src_client_key|default(omit) }}"
  tags: always
